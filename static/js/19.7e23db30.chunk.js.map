{"version":3,"sources":["../../../shared/codepen.io/tinypolyworldthreejs-experiements/index.jsx","../../../shared/codepen.io/tinypolyworldthreejs-experiements/src/script.js"],"names":["App","greeting","name","_loaded","addScript","url","script","document","createElement","type","addEventListener","event","console","log","path","src","getElementsByTagName","appendChild","useState","count","useEffect","a","main","then","ret","intervalId","setInterval","THREE","clearInterval","require","catch","error","className","id","scene","camera","aspectRatio","HEIGHT","WIDTH","renderer","shadowLight","Colors","handleWindowResize","window","innerHeight","innerWidth","setSize","aspect","updateProjectionMatrix","Land","geom","CylinderGeometry","applyMatrix","Matrix4","makeRotationX","Math","PI","mat","MeshPhongMaterial","color","shading","FlatShading","this","mesh","Mesh","receiveShadow","Orbit","Object3D","Sun","sunGeom","SphereGeometry","sunMat","sun","castShadow","add","Cloud","DodecahedronGeometry","nBlocs","floor","random","i","m","position","x","y","z","rotation","s","scale","set","Sky","nClouds","stepAngle","c","h","sin","cos","Tree","matTreeLeaves","geonTreeBase","BoxGeometry","matTreeBase","MeshBasicMaterial","treeBase","geomTreeLeaves1","treeLeaves1","geomTreeLeaves2","treeLeaves2","geomTreeLeaves3","treeLeaves3","Flower","geomStem","matStem","stem","geomPetalCore","matPetalCore","petalCore","petalColor","petalColors","geomPetal","matPetal","vertices","translate","petals","Forest","nTrees","t","nFlowers","f","sky","forest","land","orbit","airplane","AirPlane","geomCockpit","matCockpit","cockpit","geomEngine","matEngine","engine","geomTailPlane","matTailPlane","tailPlane","geomSideWing","matSideWing","sideWingTop","sideWingBottom","geomWindshield","matWindshield","transparent","opacity","windshield","geomPropeller","matPropeller","propeller","geomBlade1","geomBlade2","matBlade","blade1","blade2","wheelProtecGeom","wheelProtecMat","wheelProtecR","wheelTireGeom","wheelTireMat","wheelTireR","wheelAxisGeom","wheelAxisMat","wheelAxis","wheelProtecL","clone","wheelTireL","wheelTireB","suspensionGeom","makeTranslation","suspensionMat","suspension","mousePos","offSet","normalize","v","vmin","vmax","tmin","tmax","max","min","loop","targetY","targetX","updatePlane","render","requestAnimationFrame","handleMouseMove","tx","clientX","ty","clientY","Scene","fog","Fog","PerspectiveCamera","WebGLRenderer","alpha","antialias","shadowMap","enabled","getElementById","domElement","hemisphereLight","HemisphereLight","DirectionalLight","shadow","left","right","top","bottom","near","far","mapSize","width","height"],"mappings":"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","file":"static/js/19.7e23db30.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./src/style.scss\";\n\nfunction App({ greeting, name }) {\n  let _loaded = {};\n  function addScript(url) {\n    if (!_loaded[url]) {\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.addEventListener(\"load\", function (event) {\n        console.log(\"script loaded: \", event.path[0].src);\n      });\n      script.src = url;\n      document.getElementsByTagName(\"head\")[0].appendChild(script);\n      //   document.head.appendChild(script);\n      _loaded[url] = true;\n      return _loaded;\n    }\n  }\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    //\n    (function () {\n      async function main(url) {\n        return addScript(url);\n      }\n\n      main(\"https://cdnjs.cloudflare.com/ajax/libs/three.js/86/three.min.js\")\n        .then((ret) => {\n          console.log(\"ret: \", ret);\n          //\n          var intervalId = setInterval(function () {\n            console.log(\"setInterval ret: \", ret);\n            if (typeof THREE !== \"undefined\") {\n              clearInterval(intervalId);\n              console.log(`script`);\n              require(\"./src/script.js\");\n            }\n          }, 1000);\n          //\n        })\n        .catch(console.error);\n    })();\n    //\n  }, [count]); // Apenas re-execute o efeito quando o count mudar\n\n  return (\n    <div className='tinypolyworldthreejs'>\n      <div id='world'></div>\n    </div>\n  );\n}\n\nexport default App;\n","var Colors = {\n  red: 0xf25346,\n  yellow: 0xedeb27,\n  white: 0xd8d0d1,\n  brown: 0x59332e,\n  pink: 0xf5986e,\n  brownDark: 0x23190f,\n  blue: 0x68c3c0,\n  green: 0x458248,\n  purple: 0x551a8b,\n  lightgreen: 0x629265,\n};\n\nvar scene,\n  camera,\n  fieldOfView,\n  aspectRatio,\n  nearPlane,\n  farPlane,\n  HEIGHT,\n  WIDTH,\n  renderer,\n  container;\n\nfunction createScene() {\n  // Get the width and height of the screen\n  // and use them to setup the aspect ratio\n  // of the camera and the size of the renderer.\n  HEIGHT = window.innerHeight;\n  WIDTH = window.innerWidth;\n\n  // Create the scene.\n  scene = new THREE.Scene();\n\n  // Add FOV Fog effect to the scene. Same colour as the BG int he stylesheet.\n  scene.fog = new THREE.Fog(0xf7d9aa, 100, 950);\n\n  // Create the camera\n  aspectRatio = WIDTH / HEIGHT;\n  fieldOfView = 60;\n  nearPlane = 1;\n  farPlane = 10000;\n  camera = new THREE.PerspectiveCamera(\n    fieldOfView,\n    aspectRatio,\n    nearPlane,\n    farPlane\n  );\n  // Position the camera\n  camera.position.x = 0;\n  camera.position.y = 150;\n  camera.position.z = 100;\n\n  // Create the renderer\n\n  renderer = new THREE.WebGLRenderer({\n    // Alpha makes the background transparent, antialias is performant heavy\n    alpha: true,\n    antialias: true,\n  });\n\n  //set the size of the renderer to fullscreen\n  renderer.setSize(WIDTH, HEIGHT);\n  //enable shadow rendering\n  renderer.shadowMap.enabled = true;\n\n  // Add the Renderer to the DOM, in the world div.\n  container = document.getElementById(\"world\");\n  container.appendChild(renderer.domElement);\n\n  //RESPONSIVE LISTENER\n  window.addEventListener(\"resize\", handleWindowResize, false);\n}\n\n//RESPONSIVE FUNCTION\nfunction handleWindowResize() {\n  HEIGHT = window.innerHeight;\n  WIDTH = window.innerWidth;\n  renderer.setSize(WIDTH, HEIGHT);\n  camera.aspect = WIDTH / HEIGHT;\n  camera.updateProjectionMatrix();\n}\n\nvar hemispshereLight, shadowLight;\n\nfunction createLights() {\n  // Gradient coloured light - Sky, Ground, Intensity\n  hemisphereLight = new THREE.HemisphereLight(0xaaaaaa, 0x000000, 0.9);\n  // Parallel rays\n  shadowLight = new THREE.DirectionalLight(0xffffff, 0.9);\n\n  shadowLight.position.set(0, 350, 350);\n  shadowLight.castShadow = true;\n\n  // define the visible area of the projected shadow\n  shadowLight.shadow.camera.left = -650;\n  shadowLight.shadow.camera.right = 650;\n  shadowLight.shadow.camera.top = 650;\n  shadowLight.shadow.camera.bottom = -650;\n  shadowLight.shadow.camera.near = 1;\n  shadowLight.shadow.camera.far = 1000;\n\n  // Shadow map size\n  shadowLight.shadow.mapSize.width = 2048;\n  shadowLight.shadow.mapSize.height = 2048;\n\n  // Add the lights to the scene\n  scene.add(hemisphereLight);\n\n  scene.add(shadowLight);\n}\n\nLand = function () {\n  var geom = new THREE.CylinderGeometry(600, 600, 1700, 40, 10);\n  //rotate on the x axis\n  geom.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));\n  //create a material\n  var mat = new THREE.MeshPhongMaterial({\n    color: Colors.lightgreen,\n    shading: THREE.FlatShading,\n  });\n\n  //create a mesh of the object\n  this.mesh = new THREE.Mesh(geom, mat);\n  //receive shadows\n  this.mesh.receiveShadow = true;\n};\n\nOrbit = function () {\n  var geom = new THREE.Object3D();\n\n  this.mesh = geom;\n  //this.mesh.add(sun);\n};\n\nSun = function () {\n  this.mesh = new THREE.Object3D();\n\n  var sunGeom = new THREE.SphereGeometry(400, 20, 10);\n  var sunMat = new THREE.MeshPhongMaterial({\n    color: Colors.yellow,\n    shading: THREE.FlatShading,\n  });\n  var sun = new THREE.Mesh(sunGeom, sunMat);\n  //sun.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI/2));\n  sun.castShadow = false;\n  sun.receiveShadow = false;\n  this.mesh.add(sun);\n};\n\nCloud = function () {\n  // Create an empty container for the cloud\n  this.mesh = new THREE.Object3D();\n  // Cube geometry and material\n  var geom = new THREE.DodecahedronGeometry(20, 0);\n  var mat = new THREE.MeshPhongMaterial({\n    color: Colors.white,\n  });\n\n  var nBlocs = 3 + Math.floor(Math.random() * 3);\n\n  for (var i = 0; i < nBlocs; i++) {\n    //Clone mesh geometry\n    var m = new THREE.Mesh(geom, mat);\n    //Randomly position each cube\n    m.position.x = i * 15;\n    m.position.y = Math.random() * 10;\n    m.position.z = Math.random() * 10;\n    m.rotation.z = Math.random() * Math.PI * 2;\n    m.rotation.y = Math.random() * Math.PI * 2;\n\n    //Randomly scale the cubes\n    var s = 0.1 + Math.random() * 0.9;\n    m.scale.set(s, s, s);\n    this.mesh.add(m);\n  }\n};\n\nSky = function () {\n  this.mesh = new THREE.Object3D();\n\n  // Number of cloud groups\n  this.nClouds = 25;\n\n  // Space the consistenly\n  var stepAngle = (Math.PI * 2) / this.nClouds;\n\n  // Create the Clouds\n\n  for (var i = 0; i < this.nClouds; i++) {\n    var c = new Cloud();\n\n    //set rotation and position using trigonometry\n    var a = stepAngle * i;\n    // this is the distance between the center of the axis and the cloud itself\n    var h = 800 + Math.random() * 200;\n    c.mesh.position.y = Math.sin(a) * h;\n    c.mesh.position.x = Math.cos(a) * h;\n\n    // rotate the cloud according to its position\n    c.mesh.rotation.z = a + Math.PI / 2;\n\n    // random depth for the clouds on the z-axis\n    c.mesh.position.z = -400 - Math.random() * 400;\n\n    // random scale for each cloud\n    var s = 1 + Math.random() * 2;\n    c.mesh.scale.set(s, s, s);\n\n    this.mesh.add(c.mesh);\n  }\n};\n\nTree = function () {\n  this.mesh = new THREE.Object3D();\n\n  var matTreeLeaves = new THREE.MeshPhongMaterial({\n    color: Colors.green,\n    shading: THREE.FlatShading,\n  });\n\n  var geonTreeBase = new THREE.BoxGeometry(10, 20, 10);\n  var matTreeBase = new THREE.MeshBasicMaterial({ color: Colors.brown });\n  var treeBase = new THREE.Mesh(geonTreeBase, matTreeBase);\n  treeBase.castShadow = true;\n  treeBase.receiveShadow = true;\n  this.mesh.add(treeBase);\n\n  var geomTreeLeaves1 = new THREE.CylinderGeometry(1, 12 * 3, 12 * 3, 4);\n  var treeLeaves1 = new THREE.Mesh(geomTreeLeaves1, matTreeLeaves);\n  treeLeaves1.castShadow = true;\n  treeLeaves1.receiveShadow = true;\n  treeLeaves1.position.y = 20;\n  this.mesh.add(treeLeaves1);\n\n  var geomTreeLeaves2 = new THREE.CylinderGeometry(1, 9 * 3, 9 * 3, 4);\n  var treeLeaves2 = new THREE.Mesh(geomTreeLeaves2, matTreeLeaves);\n  treeLeaves2.castShadow = true;\n  treeLeaves2.position.y = 40;\n  treeLeaves2.receiveShadow = true;\n  this.mesh.add(treeLeaves2);\n\n  var geomTreeLeaves3 = new THREE.CylinderGeometry(1, 6 * 3, 6 * 3, 4);\n  var treeLeaves3 = new THREE.Mesh(geomTreeLeaves3, matTreeLeaves);\n  treeLeaves3.castShadow = true;\n  treeLeaves3.position.y = 55;\n  treeLeaves3.receiveShadow = true;\n  this.mesh.add(treeLeaves3);\n};\n\nFlower = function () {\n  this.mesh = new THREE.Object3D();\n\n  var geomStem = new THREE.BoxGeometry(5, 50, 5, 1, 1, 1);\n  var matStem = new THREE.MeshPhongMaterial({\n    color: Colors.green,\n    shading: THREE.FlatShading,\n  });\n  var stem = new THREE.Mesh(geomStem, matStem);\n  stem.castShadow = false;\n  stem.receiveShadow = true;\n  this.mesh.add(stem);\n\n  var geomPetalCore = new THREE.BoxGeometry(10, 10, 10, 1, 1, 1);\n  var matPetalCore = new THREE.MeshPhongMaterial({\n    color: Colors.yellow,\n    shading: THREE.FlatShading,\n  });\n  petalCore = new THREE.Mesh(geomPetalCore, matPetalCore);\n  petalCore.castShadow = false;\n  petalCore.receiveShadow = true;\n\n  var petalColor = petalColors[Math.floor(Math.random() * 3)];\n\n  var geomPetal = new THREE.BoxGeometry(15, 20, 5, 1, 1, 1);\n  var matPetal = new THREE.MeshBasicMaterial({ color: petalColor });\n  geomPetal.vertices[5].y -= 4;\n  geomPetal.vertices[4].y -= 4;\n  geomPetal.vertices[7].y += 4;\n  geomPetal.vertices[6].y += 4;\n  geomPetal.translate(12.5, 0, 3);\n\n  var petals = [];\n  for (var i = 0; i < 4; i++) {\n    petals[i] = new THREE.Mesh(geomPetal, matPetal);\n    petals[i].rotation.z = (i * Math.PI) / 2;\n    petals[i].castShadow = true;\n    petals[i].receiveShadow = true;\n  }\n\n  petalCore.add(petals[0], petals[1], petals[2], petals[3]);\n  petalCore.position.y = 25;\n  petalCore.position.z = 3;\n  this.mesh.add(petalCore);\n};\n\nvar petalColors = [Colors.red, Colors.yellow, Colors.blue];\n\nForest = function () {\n  this.mesh = new THREE.Object3D();\n\n  // Number of Trees\n  this.nTrees = 300;\n\n  // Space the consistenly\n  var stepAngle = (Math.PI * 2) / this.nTrees;\n\n  // Create the Trees\n\n  for (var i = 0; i < this.nTrees; i++) {\n    var t = new Tree();\n\n    //set rotation and position using trigonometry\n    var a = stepAngle * i;\n    // this is the distance between the center of the axis and the tree itself\n    var h = 605;\n    t.mesh.position.y = Math.sin(a) * h;\n    t.mesh.position.x = Math.cos(a) * h;\n\n    // rotate the tree according to its position\n    t.mesh.rotation.z = a + (Math.PI / 2) * 3;\n\n    //Andreas Trigo funtime\n    //t.mesh.rotation.z = Math.atan2(t.mesh.position.y, t.mesh.position.x)-Math.PI/2;\n\n    // random depth for the tree on the z-axis\n    t.mesh.position.z = 0 - Math.random() * 600;\n\n    // random scale for each tree\n    var s = 0.3 + Math.random() * 0.75;\n    t.mesh.scale.set(s, s, s);\n\n    this.mesh.add(t.mesh);\n  }\n\n  // Number of Trees\n  this.nFlowers = 350;\n\n  var stepAngle = (Math.PI * 2) / this.nFlowers;\n\n  for (var i = 0; i < this.nFlowers; i++) {\n    var f = new Flower();\n    var a = stepAngle * i;\n\n    var h = 605;\n    f.mesh.position.y = Math.sin(a) * h;\n    f.mesh.position.x = Math.cos(a) * h;\n\n    f.mesh.rotation.z = a + (Math.PI / 2) * 3;\n\n    f.mesh.position.z = 0 - Math.random() * 600;\n\n    var s = 0.1 + Math.random() * 0.3;\n    f.mesh.scale.set(s, s, s);\n\n    this.mesh.add(f.mesh);\n  }\n};\n\nvar AirPlane = function () {\n  this.mesh = new THREE.Object3D();\n\n  // Create the cabin\n  var geomCockpit = new THREE.BoxGeometry(80, 50, 50, 1, 1, 1);\n  var matCockpit = new THREE.MeshPhongMaterial({\n    color: Colors.red,\n    shading: THREE.FlatShading,\n  });\n  geomCockpit.vertices[4].y -= 10;\n  geomCockpit.vertices[4].z += 20;\n  geomCockpit.vertices[5].y -= 10;\n  geomCockpit.vertices[5].z -= 20;\n  geomCockpit.vertices[6].y += 30;\n  geomCockpit.vertices[6].z += 20;\n  geomCockpit.vertices[7].y += 30;\n  geomCockpit.vertices[7].z -= 20;\n  var cockpit = new THREE.Mesh(geomCockpit, matCockpit);\n  cockpit.castShadow = true;\n  cockpit.receiveShadow = true;\n  this.mesh.add(cockpit);\n\n  // Create the engine\n  var geomEngine = new THREE.BoxGeometry(20, 50, 50, 1, 1, 1);\n  var matEngine = new THREE.MeshPhongMaterial({\n    color: Colors.white,\n    shading: THREE.FlatShading,\n  });\n  var engine = new THREE.Mesh(geomEngine, matEngine);\n  engine.position.x = 40;\n  engine.castShadow = true;\n  engine.receiveShadow = true;\n  this.mesh.add(engine);\n\n  // Create the tail\n  var geomTailPlane = new THREE.BoxGeometry(15, 20, 5, 1, 1, 1);\n  var matTailPlane = new THREE.MeshPhongMaterial({\n    color: Colors.red,\n    shading: THREE.FlatShading,\n  });\n  var tailPlane = new THREE.Mesh(geomTailPlane, matTailPlane);\n  tailPlane.position.set(-35, 25, 0);\n  tailPlane.castShadow = true;\n  tailPlane.receiveShadow = true;\n  this.mesh.add(tailPlane);\n\n  // Create the wing\n  var geomSideWing = new THREE.BoxGeometry(40, 4, 150, 1, 1, 1);\n  var matSideWing = new THREE.MeshPhongMaterial({\n    color: Colors.red,\n    shading: THREE.FlatShading,\n  });\n\n  var sideWingTop = new THREE.Mesh(geomSideWing, matSideWing);\n  var sideWingBottom = new THREE.Mesh(geomSideWing, matSideWing);\n  sideWingTop.castShadow = true;\n  sideWingTop.receiveShadow = true;\n  sideWingBottom.castShadow = true;\n  sideWingBottom.receiveShadow = true;\n\n  sideWingTop.position.set(20, 12, 0);\n  sideWingBottom.position.set(20, -3, 0);\n  this.mesh.add(sideWingTop);\n  this.mesh.add(sideWingBottom);\n\n  var geomWindshield = new THREE.BoxGeometry(3, 15, 20, 1, 1, 1);\n  var matWindshield = new THREE.MeshPhongMaterial({\n    color: Colors.white,\n    transparent: true,\n    opacity: 0.3,\n    shading: THREE.FlatShading,\n  });\n  var windshield = new THREE.Mesh(geomWindshield, matWindshield);\n  windshield.position.set(5, 27, 0);\n\n  windshield.castShadow = true;\n  windshield.receiveShadow = true;\n\n  this.mesh.add(windshield);\n\n  var geomPropeller = new THREE.BoxGeometry(20, 10, 10, 1, 1, 1);\n  geomPropeller.vertices[4].y -= 5;\n  geomPropeller.vertices[4].z += 5;\n  geomPropeller.vertices[5].y -= 5;\n  geomPropeller.vertices[5].z -= 5;\n  geomPropeller.vertices[6].y += 5;\n  geomPropeller.vertices[6].z += 5;\n  geomPropeller.vertices[7].y += 5;\n  geomPropeller.vertices[7].z -= 5;\n  var matPropeller = new THREE.MeshPhongMaterial({\n    color: Colors.brown,\n    shading: THREE.FlatShading,\n  });\n  this.propeller = new THREE.Mesh(geomPropeller, matPropeller);\n  this.propeller.castShadow = true;\n  this.propeller.receiveShadow = true;\n\n  var geomBlade1 = new THREE.BoxGeometry(1, 100, 10, 1, 1, 1);\n  var geomBlade2 = new THREE.BoxGeometry(1, 10, 100, 1, 1, 1);\n  var matBlade = new THREE.MeshPhongMaterial({\n    color: Colors.brownDark,\n    shading: THREE.FlatShading,\n  });\n\n  var blade1 = new THREE.Mesh(geomBlade1, matBlade);\n  blade1.position.set(8, 0, 0);\n  blade1.castShadow = true;\n  blade1.receiveShadow = true;\n\n  var blade2 = new THREE.Mesh(geomBlade2, matBlade);\n  blade2.position.set(8, 0, 0);\n  blade2.castShadow = true;\n  blade2.receiveShadow = true;\n  this.propeller.add(blade1, blade2);\n  this.propeller.position.set(50, 0, 0);\n  this.mesh.add(this.propeller);\n\n  var wheelProtecGeom = new THREE.BoxGeometry(30, 15, 10, 1, 1, 1);\n  var wheelProtecMat = new THREE.MeshPhongMaterial({\n    color: Colors.white,\n    shading: THREE.FlatShading,\n  });\n  var wheelProtecR = new THREE.Mesh(wheelProtecGeom, wheelProtecMat);\n  wheelProtecR.position.set(25, -20, 25);\n  this.mesh.add(wheelProtecR);\n\n  var wheelTireGeom = new THREE.BoxGeometry(24, 24, 4);\n  var wheelTireMat = new THREE.MeshPhongMaterial({\n    color: Colors.brownDark,\n    shading: THREE.FlatShading,\n  });\n  var wheelTireR = new THREE.Mesh(wheelTireGeom, wheelTireMat);\n  wheelTireR.position.set(25, -28, 25);\n\n  var wheelAxisGeom = new THREE.BoxGeometry(10, 10, 6);\n  var wheelAxisMat = new THREE.MeshPhongMaterial({\n    color: Colors.brown,\n    shading: THREE.FlatShading,\n  });\n  var wheelAxis = new THREE.Mesh(wheelAxisGeom, wheelAxisMat);\n  wheelTireR.add(wheelAxis);\n\n  this.mesh.add(wheelTireR);\n\n  var wheelProtecL = wheelProtecR.clone();\n  wheelProtecL.position.z = -wheelProtecR.position.z;\n  this.mesh.add(wheelProtecL);\n\n  var wheelTireL = wheelTireR.clone();\n  wheelTireL.position.z = -wheelTireR.position.z;\n  this.mesh.add(wheelTireL);\n\n  var wheelTireB = wheelTireR.clone();\n  wheelTireB.scale.set(0.5, 0.5, 0.5);\n  wheelTireB.position.set(-35, -5, 0);\n  this.mesh.add(wheelTireB);\n\n  var suspensionGeom = new THREE.BoxGeometry(4, 20, 4);\n  suspensionGeom.applyMatrix(new THREE.Matrix4().makeTranslation(0, 10, 0));\n  var suspensionMat = new THREE.MeshPhongMaterial({\n    color: Colors.red,\n    shading: THREE.FlatShading,\n  });\n  var suspension = new THREE.Mesh(suspensionGeom, suspensionMat);\n  suspension.position.set(-35, -5, 0);\n  suspension.rotation.z = -0.3;\n  this.mesh.add(suspension);\n};\n\nvar Fox = function () {\n  this.mesh = new THREE.Object3D();\n\n  var redFurMat = new THREE.MeshPhongMaterial({\n    color: Colors.red,\n    shading: THREE.FlatShading,\n  });\n\n  // Create the Body\n  var geomBody = new THREE.BoxGeometry(100, 50, 50, 1, 1, 1);\n  var body = new THREE.Mesh(geomBody, redFurMat);\n  body.castShadow = true;\n  body.receiveShadow = true;\n  this.mesh.add(body);\n\n  // Create the Chest\n  var geomChest = new THREE.BoxGeometry(50, 60, 70, 1, 1, 1);\n  var chest = new THREE.Mesh(geomChest, redFurMat);\n  chest.position.x = 60;\n  chest.castShadow = true;\n  chest.receiveShadow = true;\n  this.mesh.add(chest);\n\n  // Create the Head\n  var geomHead = new THREE.BoxGeometry(40, 55, 50, 1, 1, 1);\n  this.head = new THREE.Mesh(geomHead, redFurMat);\n  this.head.position.set(80, 35, 0);\n  this.head.castShadow = true;\n  this.head.receiveShadow = true;\n\n  // Create the Snout\n  var geomSnout = new THREE.BoxGeometry(40, 30, 30, 1, 1, 1);\n  var snout = new THREE.Mesh(geomSnout, redFurMat);\n  geomSnout.vertices[0].y -= 5;\n  geomSnout.vertices[0].z += 5;\n  geomSnout.vertices[1].y -= 5;\n  geomSnout.vertices[1].z -= 5;\n  geomSnout.vertices[2].y += 5;\n  geomSnout.vertices[2].z += 5;\n  geomSnout.vertices[3].y += 5;\n  geomSnout.vertices[3].z -= 5;\n  snout.castShadow = true;\n  snout.receiveShadow = true;\n  snout.position.set(30, 0, 0);\n  this.head.add(snout);\n\n  // Create the Nose\n  var geomNose = new THREE.BoxGeometry(10, 15, 20, 1, 1, 1);\n  var matNose = new THREE.MeshPhongMaterial({\n    color: Colors.brown,\n    shading: THREE.FlatShading,\n  });\n  var nose = new THREE.Mesh(geomNose, matNose);\n  nose.position.set(55, 0, 0);\n  this.head.add(nose);\n\n  // Create the Ears\n  var geomEar = new THREE.BoxGeometry(10, 40, 30, 1, 1, 1);\n  var earL = new THREE.Mesh(geomEar, redFurMat);\n  earL.position.set(-10, 40, -18);\n  this.head.add(earL);\n  earL.rotation.x = -Math.PI / 10;\n  geomEar.vertices[1].z += 5;\n  geomEar.vertices[4].z += 5;\n  geomEar.vertices[0].z -= 5;\n  geomEar.vertices[5].z -= 5;\n\n  // Create the Ear Tips\n  var geomEarTipL = new THREE.BoxGeometry(10, 10, 20, 1, 1, 1);\n  var matEarTip = new THREE.MeshPhongMaterial({\n    color: Colors.white,\n    shading: THREE.FlatShading,\n  });\n  var earTipL = new THREE.Mesh(geomEarTipL, matEarTip);\n  earTipL.position.set(0, 25, 0);\n  earL.add(earTipL);\n\n  var earR = earL.clone();\n  earR.position.z = -earL.position.z;\n  earR.rotation.x = -earL.rotation.x;\n  this.head.add(earR);\n\n  this.mesh.add(this.head);\n\n  // Create the tail\n  var geomTail = new THREE.BoxGeometry(80, 40, 40, 2, 1, 1);\n  geomTail.vertices[4].y -= 10;\n  geomTail.vertices[4].z += 10;\n  geomTail.vertices[5].y -= 10;\n  geomTail.vertices[5].z -= 10;\n  geomTail.vertices[6].y += 10;\n  geomTail.vertices[6].z += 10;\n  geomTail.vertices[7].y += 10;\n  geomTail.vertices[7].z -= 10;\n  this.tail = new THREE.Mesh(geomTail, redFurMat);\n  this.tail.castShadow = true;\n  this.tail.receiveShadow = true;\n\n  // Create the tail Tip\n  var geomTailTip = new THREE.BoxGeometry(20, 40, 40, 1, 1, 1);\n  var matTailTip = new THREE.MeshPhongMaterial({\n    color: Colors.white,\n    shading: THREE.FlatShading,\n  });\n  var tailTip = new THREE.Mesh(geomTailTip, matTailTip);\n  tailTip.position.set(80, 0, 0);\n  tailTip.castShadow = true;\n  tailTip.receiveShadow = true;\n  this.tail.add(tailTip);\n  this.tail.position.set(-40, 10, 0);\n  geomTail.translate(40, 0, 0);\n  geomTailTip.translate(10, 0, 0);\n  this.tail.rotation.z = Math.PI / 1.5;\n  this.mesh.add(this.tail);\n\n  // Create the Legs\n  var geomLeg = new THREE.BoxGeometry(20, 60, 20, 1, 1, 1);\n  this.legFR = new THREE.Mesh(geomLeg, redFurMat);\n  this.legFR.castShadow = true;\n  this.legFR.receiveShadow = true;\n\n  // Create the feet\n  var geomFeet = new THREE.BoxGeometry(20, 20, 20, 1, 1, 1);\n  var matFeet = new THREE.MeshPhongMaterial({\n    color: Colors.white,\n    shading: THREE.FlatShading,\n  });\n  var feet = new THREE.Mesh(geomFeet, matFeet);\n  feet.position.set(0, 0, 0);\n  feet.castShadow = true;\n  feet.receiveShadow = true;\n  this.legFR.add(feet);\n  this.legFR.position.set(70, -12, 25);\n  geomLeg.translate(0, 40, 0);\n  geomFeet.translate(0, 80, 0);\n  this.legFR.rotation.z = 16;\n  this.mesh.add(this.legFR);\n\n  this.legFL = this.legFR.clone();\n  this.legFL.position.z = -this.legFR.position.z;\n  this.legFL.rotation.z = -this.legFR.rotation.z;\n  this.mesh.add(this.legFL);\n\n  this.legBR = this.legFR.clone();\n  this.legBR.position.x = -this.legFR.position.x + 50;\n  this.legBR.rotation.z = -this.legFR.rotation.z;\n  this.mesh.add(this.legBR);\n\n  this.legBL = this.legFL.clone();\n  this.legBL.position.x = -this.legFL.position.x + 50;\n  this.legBL.rotation.z = -this.legFL.rotation.z;\n  this.mesh.add(this.legBL);\n};\n\nvar sky;\nvar forest;\nvar land;\nvar orbit;\nvar airplane;\nvar sun;\nvar fox;\n\nvar mousePos = { x: 0, y: 0 };\nvar offSet = -600;\n\nfunction createSky() {\n  sky = new Sky();\n  sky.mesh.position.y = offSet;\n  scene.add(sky.mesh);\n}\n\nfunction createLand() {\n  land = new Land();\n  land.mesh.position.y = offSet;\n  scene.add(land.mesh);\n}\n\nfunction createOrbit() {\n  orbit = new Orbit();\n  orbit.mesh.position.y = offSet;\n  orbit.mesh.rotation.z = -Math.PI / 6;\n  scene.add(orbit.mesh);\n}\n\nfunction createForest() {\n  forest = new Forest();\n  forest.mesh.position.y = offSet;\n  scene.add(forest.mesh);\n}\n\nfunction createSun() {\n  sun = new Sun();\n  sun.mesh.scale.set(1, 1, 0.3);\n  sun.mesh.position.set(0, -30, -850);\n  scene.add(sun.mesh);\n}\n\nfunction createPlane() {\n  airplane = new AirPlane();\n  airplane.mesh.scale.set(0.35, 0.35, 0.35);\n  airplane.mesh.position.set(-40, 110, -250);\n  // airplane.mesh.rotation.z = Math.PI/15;\n  scene.add(airplane.mesh);\n}\n\nfunction createFox() {\n  fox = new Fox();\n  fox.mesh.scale.set(0.35, 0.35, 0.35);\n  fox.mesh.position.set(-40, 110, -250);\n  scene.add(fox.mesh);\n}\n\nfunction updatePlane() {\n  var targetY = normalize(mousePos.y, -0.75, 0.75, 50, 190);\n  var targetX = normalize(mousePos.x, -0.75, 0.75, -100, -20);\n\n  // Move the plane at each frame by adding a fraction of the remaining distance\n  airplane.mesh.position.y += (targetY - airplane.mesh.position.y) * 0.1;\n\n  airplane.mesh.position.x += (targetX - airplane.mesh.position.x) * 0.1;\n\n  // Rotate the plane proportionally to the remaining distance\n  airplane.mesh.rotation.z = (targetY - airplane.mesh.position.y) * 0.0128;\n  airplane.mesh.rotation.x = (airplane.mesh.position.y - targetY) * 0.0064;\n  airplane.mesh.rotation.y = (airplane.mesh.position.x - targetX) * 0.0064;\n\n  airplane.propeller.rotation.x += 0.3;\n}\n\nfunction normalize(v, vmin, vmax, tmin, tmax) {\n  var nv = Math.max(Math.min(v, vmax), vmin);\n  var dv = vmax - vmin;\n  var pc = (nv - vmin) / dv;\n  var dt = tmax - tmin;\n  var tv = tmin + pc * dt;\n  return tv;\n}\n\nfunction loop() {\n  land.mesh.rotation.z += 0.005;\n  orbit.mesh.rotation.z += 0.001;\n  sky.mesh.rotation.z += 0.003;\n  forest.mesh.rotation.z += 0.005;\n  updatePlane();\n\n  renderer.render(scene, camera);\n  requestAnimationFrame(loop);\n}\n\nfunction handleMouseMove(event) {\n  var tx = -1 + (event.clientX / WIDTH) * 2;\n  var ty = 1 - (event.clientY / HEIGHT) * 2;\n  mousePos = { x: tx, y: ty };\n}\n\nfunction init(event) {\n  createScene();\n  createLights();\n  createPlane();\n  createOrbit();\n  createSun();\n  createLand();\n  createForest();\n  createSky();\n  //createFox();\n\n  document.addEventListener(\"mousemove\", handleMouseMove, false);\n\n  loop();\n\n  console.log(\"init\");\n}\n\n// window.addEventListener('load', init, false);\n\ninit();\n"],"sourceRoot":""}