{"version":3,"sources":["../../../shared/common/add-to-homescreen/src/script.js","../../../shared/common/add-to-homescreen/index.js"],"names":["deferredPrompt","console","log","addBtn","document","getElementById","style","display","pwaInstaller","window","addEventListener","e","preventDefault","prompt","userChoice","then","choiceResult","outcome","evt","$","toast","location","protocol","navigator","getInstalledRelatedApps","relatedApps","forEach","app","id","platform","url","App","greeting","name","useState","count","useEffect","require","slice","call","querySelectorAll","map","toastEl","myBsToast","bootstrap","Toast","option","show","role","className","position","bottom","left","zIndex","type"],"mappings":"8IAMA,IAAIA,EAFJC,QAAQC,IAAI,0BAIZ,IAAIC,EAASC,SAASC,eAAe,cACrCF,EAAOG,MAAMC,QAAU,OACvB,IAAIC,EAAeJ,SAASC,eAAe,iBAC3CG,EAAaF,MAAMC,QAAU,OAE7BE,OAAOC,iBAAiB,uBAAuB,SAACC,GAC9CV,QAAQC,IAAI,wBAAyBS,GAErCA,EAAEC,iBAEFZ,EAAiBW,EAEjBR,EAAOG,MAAMC,QAAU,QACvBC,EAAaF,MAAMC,QAAU,QAE7BJ,EAAOO,iBAAiB,SAAS,SAACC,GAChCV,QAAQC,IAAI,UAAWS,GAEvBR,EAAOG,MAAMC,QAAU,OAEvBP,EAAea,SAEfb,EAAec,WAAWC,MAAK,SAACC,GAC9Bf,QAAQC,IAAI,iBAAkBc,GACD,aAAzBA,EAAaC,QACfhB,QAAQC,IAAI,iCAEZD,QAAQC,IAAI,kCAEdF,EAAiB,cAKvBS,OAAOC,iBAAiB,gBAAgB,SAAUQ,GAChDjB,QAAQC,IAAI,iBAAkBgB,GAC9BC,EAAE,UAAUC,MAAM,WAGY,QAA5BX,OAAOY,SAASC,UAAkD,SAA5Bb,OAAOY,SAASC,UAExDC,UAAUC,0BAA0BT,MAAK,SAACU,GACxCxB,QAAQC,IAAI,gBAAiBuB,GAC7BA,EAAYC,SAAQ,SAACC,GACnB1B,QAAQC,IAAIyB,EAAIC,GAAID,EAAIE,SAAUF,EAAIG,Y,4FCJ7BC,UA5Cf,YAAiC,EAAlBC,SAAkB,EAARC,KAAS,IAChC,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAsBA,OAtBA,KACAC,qBAAU,WAERC,EAAQ,KAIU,GAAGC,MAAMC,KAAKnC,SAASoC,iBAAiB,WAC9BC,KAAI,SAAUC,GACxC,IACIC,EAAY,IAAIC,IAAUC,MAAMH,EADhCI,WAGJ,OADAH,EAAUI,OACHJ,OAQR,CAACR,IAGF,mCACE,qBACEP,GAAG,gBACHoB,KAAK,QACL,YAAU,YACV,cAAY,OACZC,UAAU,QACV,gBAAc,QACd3C,MAAO,CAAE4C,SAAU,QAASC,OAAQ,IAAKC,KAAM,IAAKC,OAAQ,KAP9D,SASE,qBAAKJ,UAAU,eAAf,SACE,wBAAQrB,GAAG,aAAa0B,KAAK,SAASL,UAAU,kBAAhD,SACG","file":"static/js/20.0f004ec4.chunk.js","sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen\n\n// \"use strict\";\n\nconsole.log(\"Progressive_web_apps: \");\n\nlet deferredPrompt;\n// const addBtn = document.querySelector('.add-button');\nlet addBtn = document.getElementById(\"butInstall\");\naddBtn.style.display = \"none\";\nlet pwaInstaller = document.getElementById(\"pwa-installer\");\npwaInstaller.style.display = \"none\";\n\nwindow.addEventListener(\"beforeinstallprompt\", (e) => {\n  console.log(\"beforeinstallprompt: \", e);\n  // Prevent Chrome 67 and earlier from automatically showing the prompt\n  e.preventDefault();\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n  // Update UI to notify the user they can add to home screen\n  addBtn.style.display = \"block\";\n  pwaInstaller.style.display = \"block\";\n\n  addBtn.addEventListener(\"click\", (e) => {\n    console.log(\"click: \", e);\n    // hide our user interface that shows our A2HS button\n    addBtn.style.display = \"none\";\n    // Show the prompt\n    deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    deferredPrompt.userChoice.then((choiceResult) => {\n      console.log(\"choiceResult: \", choiceResult);\n      if (choiceResult.outcome === \"accepted\") {\n        console.log(\"User accepted the A2HS prompt\");\n      } else {\n        console.log(\"User dismissed the A2HS prompt\");\n      }\n      deferredPrompt = null;\n    });\n  });\n});\n\nwindow.addEventListener(\"appinstalled\", function (evt) {\n  console.log(\"appinstalled: \", evt);\n  $(\".toast\").toast(\"hide\");\n});\n\nif (window.location.protocol == \"http\" || window.location.protocol == \"https\") {\n  // getInstalledRelatedApps() is only supported in top-level browsing contexts.\n  navigator.getInstalledRelatedApps().then((relatedApps) => {\n    console.log(\"relatedApps: \", relatedApps);\n    relatedApps.forEach((app) => {\n      console.log(app.id, app.platform, app.url);\n    });\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./src/style.scss\";\nimport bootstrap from \"bootstrap/dist/js/bootstrap.min.js\";\n\nfunction App({ greeting, name }) {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    //\n    require(\"./src/script.js\");\n    // console.log(\"process.env: \", process.env);\n    // $(\".toast\").toast(\"show\");\n    // https://getbootstrap.com/docs/5.0/components/toasts/#usage\n    var toastElList = [].slice.call(document.querySelectorAll(\".toast\"));\n    var toastList = toastElList.map(function (toastEl) {\n      let option;\n      var myBsToast = new bootstrap.Toast(toastEl, option);\n      myBsToast.show();\n      return myBsToast;\n    });\n\n    //\n    // var myToast = document.querySelector(\".toast\");\n    // var myBsToast = new bootstrap.Toast(myToast);\n    // myBsToast.show();\n    //\n  }, [count]); // Apenas re-execute o efeito quando o count mudar\n\n  return (\n    <>\n      <div\n        id='pwa-installer'\n        role='alert'\n        aria-live='assertive'\n        aria-atomic='true'\n        className='toast'\n        data-autohide='false'\n        style={{ position: \"fixed\", bottom: \"0\", left: \"0\", zIndex: \"3\" }}\n      >\n        <div className='toast-header'>\n          <button id='butInstall' type='button' className='btn btn-primary'>\n            {\"Adicionar o aplicativo a tela inicial\"}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}