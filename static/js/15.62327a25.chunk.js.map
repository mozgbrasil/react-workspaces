{"version":3,"sources":["../../../shared/codepen.io/add-fullscreen-toggle-to-your-pen/src/script.js","../../../shared/codepen.io/add-fullscreen-toggle-to-your-pen/index.jsx"],"names":["document","fullscreenEnabled","webkitFullscreenEnabled","handleFullscreen","fullscreen","webkitFullscreenElement","toggleBtn","classList","add","setAttribute","remove","querySelector","hidden","addEventListener","exitFullscreen","webkitCancelFullScreen","documentElement","requestFullscreen","webkitRequestFullScreen","App","greeting","name","useState","count","useEffect","require","className","width","height","viewBox","d"],"mappings":"+IAAA,WAEE,GAAIA,SAASC,mBAAqBD,SAASE,wBAAyB,CAAC,IAmB1DC,EAAT,WACMH,SAASI,YAAcJ,SAASK,yBAClCC,EAAUC,UAAUC,IAAI,MACxBF,EAAUG,aAAa,aAAc,0BAErCH,EAAUC,UAAUG,OAAO,MAC3BJ,EAAUG,aAAa,aAAc,2BAxBnCH,EAAYN,SAASW,cAAc,6BACzCL,EAAUM,QAAS,EAEnBN,EAAUO,iBAAiB,SAAS,WAC9Bb,SAASI,WACXJ,SAASc,iBACAd,SAASK,wBAClBL,SAASe,yBACAf,SAASgB,gBAAgBC,kBAClCjB,SAASgB,gBAAgBC,oBAEzBjB,SAASgB,gBAAgBE,6BAI7BlB,SAASa,iBAAiB,mBAAoBV,GAC9CH,SAASa,iBAAiB,yBAA0BV,IAnBxD,I,2ECyCegB,UAtCf,YAAiC,EAAlBC,SAAkB,EAARC,KAAS,IAChC,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAKA,OALA,KACAC,qBAAU,WACRC,EAAQ,OACP,CAACF,IAGF,qBAAKG,UAAU,iBAAf,SACE,wBACEA,UAAU,iDACV,aAAW,wBACXd,QAAM,EAHR,SAKE,sBACEc,UAAU,wBACVC,MAAM,KACNC,OAAO,KACPC,QAAQ,cAJV,UAME,oBAAGH,UAAU,wBAAb,UACE,sBAAMI,EAAE,mBACR,sBAAMA,EAAE,qBACR,sBAAMA,EAAE,qBACR,sBAAMA,EAAE,sBAGV,oBAAGJ,UAAU,wBAAb,UACE,sBAAMI,EAAE,qBACR,sBAAMA,EAAE,mBACR,sBAAMA,EAAE,mBACR,sBAAMA,EAAE","file":"static/js/15.62327a25.chunk.js","sourcesContent":["(function () {\n  // https://codepen.io/tiggr/pen/poJoLyW.js\n  if (document.fullscreenEnabled || document.webkitFullscreenEnabled) {\n    const toggleBtn = document.querySelector(\".js-toggle-fullscreen-btn\");\n    toggleBtn.hidden = false;\n\n    toggleBtn.addEventListener(\"click\", function () {\n      if (document.fullscreen) {\n        document.exitFullscreen();\n      } else if (document.webkitFullscreenElement) {\n        document.webkitCancelFullScreen();\n      } else if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen();\n      } else {\n        document.documentElement.webkitRequestFullScreen();\n      }\n    });\n\n    document.addEventListener(\"fullscreenchange\", handleFullscreen);\n    document.addEventListener(\"webkitfullscreenchange\", handleFullscreen);\n\n    function handleFullscreen() {\n      if (document.fullscreen || document.webkitFullscreenElement) {\n        toggleBtn.classList.add(\"on\");\n        toggleBtn.setAttribute(\"aria-label\", \"Exit fullscreen mode\");\n      } else {\n        toggleBtn.classList.remove(\"on\");\n        toggleBtn.setAttribute(\"aria-label\", \"Enter fullscreen mode\");\n      }\n    }\n  }\n})();\n","import React, { useState, useEffect } from \"react\";\nimport \"./src/style.scss\";\n\nfunction App({ greeting, name }) {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    require(\"./src/script.js\");\n  }, [count]); // Apenas re-execute o efeito quando o count mudar\n\n  return (\n    <div className='tiggr-qbdbmlm '>\n      <button\n        className='js-toggle-fullscreen-btn toggle-fullscreen-btn'\n        aria-label='Enter fullscreen mode'\n        hidden\n      >\n        <svg\n          className='toggle-fullscreen-svg'\n          width='28'\n          height='28'\n          viewBox='-2 -2 28 28'\n        >\n          <g className='icon-fullscreen-enter'>\n            <path d='M 2 9 v -7 h 7' />\n            <path d='M 22 9 v -7 h -7' />\n            <path d='M 22 15 v 7 h -7' />\n            <path d='M 2 15 v 7 h 7' />\n          </g>\n\n          <g className='icon-fullscreen-leave'>\n            <path d='M 24 17 h -7 v 7' />\n            <path d='M 0 17 h 7 v 7' />\n            <path d='M 0 7 h 7 v -7' />\n            <path d='M 24 7 h -7 v -7' />\n          </g>\n        </svg>\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}